{
	"Sailpoint rule": {
		"prefix": "rule",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"$1\">",
			"\t<Description>$2</Description>",
			"\t<Signature>",
			"\t\t<Inputs>",
			"\t\t\t<Argument name=\"$3arg1\"/>",
			"\t\t</Inputs>",
			"\t</Signature>",
			"<Source><![CDATA[",
			"$4//Just a sample code, update me",
			"return arg1;",
			"]]></Source>",
			"</Rule>"
		],
		"description": "Create a Sailpoint IIQ rule"
	},
	"Account Selector Template": {
		"prefix": "rule-accountselector",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"AccountSelector\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"      AccountSelector Rules are used by the role modeler to automatically select a target account for provisioning when there are multiple candidates.",
			"      ",
			"      The return value is a Link instance that represents the selection. Value can be:",
			"      ",
			"      null - indicates that no automatic selection can be made",
			"",
			"      \"prompt\" - indicates that a separate account selector should be presented for the role",
			"",
			"      existing Link - the selected Link from the list of possible target Links",
			"",
			"      a new Link instance - indicates that a new account must be created with the identity specified by the",
			"      create policy, or manually; in this case, the Link instance returned will have a null nativeIdentity attribute",
			"",
			"    </Description>",
			"  <Signature returnType=\"Link\">",
			"    <Inputs>",
			"      <Argument name=\"source\">",
			"        <Description>",
			"            The application doing the provisioning.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"role\">",
			"        <Description>",
			"            The IT role being provisioned.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"            The target identity.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"            The target application.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"links\">",
			"        <Description>",
			"            A list of the possible target Links.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"isSecondary\">",
			"        <Description>",
			"            True if this is not the first assignment.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"project\">",
			"        <Description>",
			"            The provisioning project.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"accountRequest\">",
			"        <Description>",
			"            The account request.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"allowCreate\">",
			"        <Description>",
			"            True if account creation is allowed.",
			"          </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"selection\">",
			"        <Description>",
			"            A Link instance that represents the selection. Value can be:",
			"            null - indicates that no automatic selection can be made",
			"            Link - the selected Link from the list of possible target Links",
			"            a new Link instance - indicates that a new account must be created with the identity specified by the",
			"            create policy, or manually; in this case, the Link instance returned will have a null nativeIdentity attribute",
			"          </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Account Selector rule"
	},
	"Activity Condition Builder Template": {
		"prefix": "rule-activityconditionbuilder",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ActivityConditionBuilder\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by the jdbc activity collector and allows a rule to build the \"where\" clause that will be used when searching for new activities. This rule uses the map built by the ActivityPositionBuilder to construct the \"where\" clause.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"config\">",
			"        <Description>",
			"          A Map containing the configuration info build by an ActivityPositionBuilderRule.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"condition\">",
			"        <Description>",
			"          The condition String, or the object whose toString() results will be used.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Activity Condition Builder rule"
	},
	"Activity Correlation Template": {
		"prefix": "rule-activitycorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ActivityCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    ActivityCorrelation Rules are used by the Activity Correlator to find Identity that performed the activities. Most data sources will return a name, which may or may not be what we store as the Link's identity.",
			"    May also return a Link instead of a Map.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application where the activity was generated.",
			"          An application may have more then one data source.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"datasource\">",
			"        <Description>",
			"          The data source that returned the activity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"activity\">",
			"        <Description>",
			"          The activity object that was normalized by",
			"          the data source and that we are trying to",
			"          correlate back to one of our Identities.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"linkInstance\">",
			"        <Description>",
			"          The name of the link instance on the application.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"linkIdentity\">",
			"        <Description>",
			"          A string that represents the link's identity attribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"linkName\">",
			"        <Description>",
			"          A string that represents the link's displayName attribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"linkAttributeName\">",
			"        <Description>",
			"          A string that represents the NAME of an attribute that",
			"          can be used to find the Link that maps back to this",
			"          activity.  This attribute must also be supplied",
			"          with the linkAttributeValue variable.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"linkAttributeValue\">",
			"        <Description>",
			"          A string that represents the VALUE of an attribute that",
			"          can be used to find the Link that maps back to this",
			"          activity. This attribute must also be supplied",
			"          with the linkAttributeName variable.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityName\">",
			"        <Description>",
			"          The name of an Identity object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          A fully resolved Identity object in case the rule wants",
			"          to do its own queries to locate the identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityAttributeName\">",
			"        <Description>",
			"          The name of the extended attribute that can be used",
			"          to locate an existing identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityAttributeValue\">",
			"        <Description>",
			"          The value of the named extended attribute that can be used",
			"          to locate an existing identity. This attribute is used",
			"          together with the identityAttributeName argument.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Activity Correlation rule"
	},
	"Activity Position Builder Template": {
		"prefix": "rule-activitypositionbuilder",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ActivityPositionBuilder\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by the jdbc activity collector, taking the last record processed and building a map that is stored on the application so that we can construct a \"where we left off\" condition in the activity condition builder.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"row\">",
			"        <Description>",
			"          A ResultSet of the row .",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"map\">",
			"        <Description>",
			"          A Map of the row's information that can be used by an ActivityConditionBuilder rule.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Activity Position Builder rule"
	},
	"Activity Transformation Template": {
		"prefix": "rule-activitytransformer",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ActivityTransformer\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    ActivityTransformation Rules are used by the LogFileCollector to transform fields parsed from a text file into our ApplicationActivity model.",
			"  </Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"activity\">",
			"        <Description>",
			"          The field named action, which is the raw parsed.",
			"          action field.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"mappedAction\">",
			"        <Description>",
			"          A normalized ApplicationActivity.Action object.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Activity Transformation rule"
	},
	"After Provisioning Rule Template": {
		"prefix": "rule-afterprovisioning",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"AfterProvisioning\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    An IdentityIQ server-side rule that is executed after the connector's provisioning method is called. This gives the customer the ability to customize or react to anything in the ProvisioningPlan AFTER it has been sent out to the specific applications. ",
			"    ",
			"    This rule will be called for any application found in a plan that also has a configured 'afterProvisioningRule' configured.        ",
			"  </Description>",
			"  <Signature>",
			"    <Inputs>",
			"      <Argument name=\"plan\">",
			"        <Description>",
			"          The ProvisioningPlan object on its way to the Connector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application object that references this before/after script.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"          The ProvisioningResult object returned by the connectors provision method. This can be null and in many cases the connector will  not return a result and instead will annotate the plan's ProvisioningResult either at the plan or account level.        ",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a After Provisioning Rule rule"
	},
	"Allowed Values Template": {
		"prefix": "rule-allowedvalues",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"AllowedValues\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Allowed Values Rules are used by provisioning policies to determine the",
			"    possible values of the policy fields.",
			"",
			"    Note that an Attributes map of arguments from the current WorkflowContext",
			"    is passed into the Allowed Values Rule. However, the contents of this map",
			"    are dependent on the use case of the rule.  In the default case, the allowed",
			"    value list is considered static.  The rule is evaluated when the form is",
			"    constructed, and the form will retain that value for the life of the work",
			"    item presenting the form.  In this case, all of the workflow variables are",
			"    passed to the rule in the Attributes map.  In the \"dynamic\" case, the rule",
			"    will be evaluated whenever the user interacts with the rule component,",
			"    thereby allowing it to be sensitive to other fields that have been set in",
			"    the form.  In the \"dynamic\" case, only the variables that were sent into",
			"    the work item are passed to the rule in the Attributes map.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The Identity object being provisioned.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"form\">",
			"        <Description>",
			"          The Form object for the provisioning plan.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"field\">",
			"        <Description>",
			"          The Field object being analyzed.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"value\">",
			"        <Description>",
			"          An Object (possibly a Collection) of the allowed values for the given",
			"          field.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Allowed Values rule"
	},
	"Approval Assignment Template": {
		"prefix": "rule-approvalassignment",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"ApprovalAssignment\">",
			"  <Description>",
			"     This example rule switches all of the owners to spadmin.  The idea ",
			"     of this rule is to allow some customization of the approvals ",
			"     so the ownership can be calculated for cases where you might",
			"     use and extended attribute or some other means outside our",
			"     default mechanisms to derive the owner of the Approval.",
			"     ",
			"     This rule is typically configured on the Approval Step",
			"     in the LCM Provisioning Workflow or can be set on any",
			"     steps based on the \"Provisioning Approval\" step ",
			"     library.",
			"     ",
			"     Since 6.2",
			"  </Description>",
			"  <Signature>",
			"    <Inputs>",
			"      <Argument name=\"log\">",
			"        <Description>",
			"          The log object associated with the SailPointContext.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"context\">",
			"        <Description>",
			"          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"approvals\">",
			"        <Description>",
			"          List of approvals generated by the approvalScheme, maybe null if there were no",
			"          approvals enabled.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"approvalSet\">",
			"        <Description>",
			"          Representation of the cart, also found on the approvals generated by the ",
			"          default schemes.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"newApprovals\">",
			"        <Description>",
			"           Return a lIst of Workflow.Approval objects that should be included",
			"           during the approval process.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Approval Assignment rule"
	},
	"Before Provisioning Rule Template": {
		"prefix": "rule-beforeprovisioning",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"BeforeProvisioning\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    An IdentityIQ server-side rule that is executed before the connector's provisioning method is called. This gives the customer the ability to customize or react to anything in the ProvisioningPlan BEFORE it is sent to the underlying connectors used in provisioning. ",
			"    ",
			"    This rule will be called for any application found in a plan that also has a configured 'beforeProvisioningRule' configured.  ",
			"    ",
			"    The plan can be updated directly in the rule by reference and does not need to return the plan. ",
			"  </Description>",
			"  <Signature>",
			"    <Inputs>",
			"      <Argument name=\"plan\">",
			"        <Description>",
			"          The ProvisioningPlan object on its way to the Connector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application object that references this before/after script.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Before Provisioning Rule rule"
	},
	"Build Map Template": {
		"prefix": "rule-buildmap",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"BuildMap\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  This rule is used by the delimited file connector to build a map representation of the delimited data.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application whose data file is being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          The Schema currently in use.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"record\">",
			"        <Description>",
			"          A List of data tokens parsed from the current line of the data file.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"cols\">",
			"        <Description>",
			"          A List of the columns to use.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"map\">",
			"        <Description>",
			"          A Map of the resource object assembled from the data.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Build Map rule"
	},
	"Certification Entity Completion Template": {
		"prefix": "rule-certificationentitycompletion",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationEntityCompletion\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   A CertificationEntity completion rule is run when a CertificationEntity is refreshed and has been determined to be otherwise complete (ie - all items on the entity are complete).  This rule determines whether the entity is still missing any information. For example, the entity may require a 'classification' value to be present in a custom field to be complete.  If errors are found, the error messages (either plain-text messages or keys that map to messages in the custom message catalog) are added to a List and returned to the caller.",
			"  </Description>",
			"  <Signature returnType=\"List\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification being refreshed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"entity\">",
			"        <Description>",
			"          The sailpoint.object.CertificationEntity being refreshed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"messages\">",
			"        <Description>",
			"        A List of Message objects if errors were found; null otherwise.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Entity Completion rule"
	},
	"Certification Entity Customization Template": {
		"prefix": "rule-certificationentitycustomization",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationEntityCustomization\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   A CertificationEntity customization rule is run when a certification is generated to allow the CertificationEntity to be customized.  For example, default values can be calculated for the custom fields.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification to which the item is being added.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certifiableEntity\">",
			"        <Description>",
			"          The sailpoint.object.AbstractCertifiableEntity from which the",
			"          certifiable was retrieved.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certContext\">",
			"        <Description>",
			"          The sailpoint.api.CertificationContext that is being used to build the",
			"          certification.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"entity\">",
			"        <Description>",
			"          The sailpoint.object.CertificationEntity to be customized.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Entity Customization rule"
	},
	"Certification Entity Refresh Template": {
		"prefix": "rule-certificationentityrefresh",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationEntityRefresh\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   A CertificationEntity refresh rule is run when a CertificationEntity is refreshed.  For example, this can copy a custom field from the CertificationEntity down onto all sub-items.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification being refreshed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"entity\">",
			"        <Description>",
			"          The sailpoint.object.CertificationEntity being refreshed.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Entity Refresh rule"
	},
	"Certification Exclusion Template": {
		"prefix": "rule-certificationexclusion",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationExclusion\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is an example Certification Exclusion rule that removes all of the certifiable items from a certification if the identity being certified is marked as inactive.",
			"  </Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"entity\" type=\"AbstractCertifiableEntity\">",
			"        <Description>",
			"          The AbstractCertifiableEntity that is part of the certification.",
			"          Currently, this is either an Identity, ManagedAttribute, or Bundle.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certification\" type=\"Certification\">",
			"        <Description>",
			"          The certification that this identity is part of.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certContext\" type=\"CertificationContext\">",
			"        <Description>",
			"          The CertificationContext that is being used to generate the",
			"          certification.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"items\" type=\"List\">",
			"        <Description>",
			"          List of Certifiable items that are currently part of the",
			"          certification for this identity.  Any items that should be excluded",
			"          from the certification should be deleted from this list and added",
			"          to the itemsToExclude list.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"itemsToExclude\" type=\"List\">",
			"        <Description>",
			"          A List of Certifiable items that should not be included in the",
			"          certification.  This list will be empty when the rule is executed",
			"          and any items that should not be part of the certification should",
			"          be moved from the items list to the itemsToExclude list.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"explanation\" type=\"String\">",
			"        <Description>",
			"          An optional explanation describing why the items were excluded.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Exclusion rule"
	},
	"Certification Item Completion Template": {
		"prefix": "rule-certificationitemcompletion",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationItemCompletion\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   A CertificationItem completion rule is run when a CertificationItem is completed.",
			"  </Description>",
			"  <Signature returnType=\"List\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification that owns the item.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The sailpoint.object.CertificationItem being completed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"entity\">",
			"        <Description>",
			"          The sailpoint.object.CertificationItem being completed.  Exists as a synonym for 'item'.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"          Either a List of Strings for simple no-arg Messages, or a List of Lists for variable-arg Messages.  In the latter case, the first element of the member List is the message/key, and the rest of the elements are the variable args.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Item Completion rule"
	},
	"Certification Item Customization Template": {
		"prefix": "rule-certificationitemcustomization",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationItemCustomization\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   A CertificationItem customization rule is run when a CertificationItem is created.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification that will own the item.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certifiable\">",
			"        <Description>",
			"          The Certifiable item.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certifiableEntity\">",
			"        <Description>",
			"          The entity that will own the item.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certContext\">",
			"        <Description>",
			"          The CertificationBuilder requesting the customization.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The CertificationItem.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The customized CertificationItem.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Item Customization rule"
	},
	"Certification Pre-delegation Template": {
		"prefix": "rule-certificationpredelegation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationPreDelegation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   A pre-delegation rule that is run on every CertificationEntity when the certification is generated in order to cause some entities to be pre-delegated.  As an example, a manager certification could pre-delegate the certification responsibility to each employee that reports to the manager.  This would allow each subordinate to first determine what they need access to, then allow the manager to review their decision.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification being created.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"entity\">",
			"        <Description>",
			"          The sailpoint.object.CertificationEntity to possibly pre-delegate.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certContext\">",
			"        <Description>",
			"          The sailpoint.api.CertificationContext generating this certification.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"recipientName\">",
			"        <Description>",
			"        The name of the Identity that should certify this entity.  Either",
			"        this or 'recipient' should be non-null if pre-delegation should be",
			"        performed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"recipient\">",
			"        <Description>",
			"        The Identity that should certify this entity.  Either this or",
			"        'recipientName' should be non-null if pre-delegation should be",
			"        performed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"description\">",
			"        <Description>",
			"        Optional description to set on the delegation WorkItem.  If null, a",
			"        default description of 'Certify [entity name]' is used.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"comments\">",
			"        <Description>",
			"        Optional comments to set on the delegation WorkItems.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"reassign\">",
			"        <Description>",
			"        Optional boolean to specify to reassign rather than delegate.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certificationName\">",
			"        <Description>",
			"        Optional String to specify the name for the reassignment certification",
			"        if creating a new certification for reassignment.  This is ignored for",
			"        delegations.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Pre-delegation rule"
	},
	"Certification Schedule Entity Selector Template": {
		"prefix": "rule-certificationscheduleentityselector",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationScheduleEntitySelector\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is optionally run to determine which entities to certify as part of a certification campaign. It can return either a Filter object or a list of identity names. If a Filter object is returned, that will be queries against Identity objects to find the identity names.",
			"  </Description>",
			"  <Signature returnType=\"Filter or List of Strings\">",
			"    <Inputs>",
			"      <Argument name=\"definition\">",
			"        <Description>",
			"          The sailpoint.object.CertificationDefinition that is being used to generate the certification campaign",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"Filter or List of Strings\">",
			"        <Description>",
			"          If returning a Filter, that will be used to query for sailpoint.object.Identity names to include. If returning a list of strings, those should be the names of sailpoint.object.Identity objects to include.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Schedule Entity Selector rule"
	},
	"Certification Sign Off Approver Template": {
		"prefix": "rule-certificationsignoffapprover",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationSignOffApprover\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   This rule is run when the certification is signed off to determine who (if anyone) needs to approve the certification decisions.  If this returns a non-null identity, the certification is forwarded to the returned identity.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification that was signed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certifier\">",
			"        <Description>",
			"          The sailpoint.object.Identity that signed the certification.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identityName\">",
			"        <Description>",
			"        The name of the Identity that should approve the certification.  Either",
			"        this or 'identity' should be non-null if certification sign off approval",
			"        is desired.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"        The Identity that should approve the certification.  Either this or",
			"        'identityName' should be non-null if certification sign off approval",
			"        is desired.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Sign Off Approver rule"
	},
	"Certification Phase Change Rule Template": {
		"prefix": "rule-certificationphasechange",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationPhaseChange\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   This rule is run when the certification either enters or leaves a phase.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification being certified.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"certificationItem\">",
			"        <Description>",
			"          The sailpoint.object.CertificationItem that is being certified.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"previousPhase\">",
			"        <Description>",
			"          Certification.Phase (may be null) that is the previous phase.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"nextPhase\">",
			"        <Description>",
			"          Certification.Phase (may be null) that is the next phase.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Phase Change Rule rule"
	},
	"Certification Automatic Closing Rule Template": {
		"prefix": "rule-certificationautomaticclosing",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CertificationAutomaticClosing\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"   This rule is run when the certification is automatically closed.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"certification\">",
			"        <Description>",
			"          The sailpoint.object.Certification being certified.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certification Automatic Closing Rule rule"
	},
	"Certifier Template": {
		"prefix": "rule-certifier",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Certifier\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to assign certifiers to populations generated from a group factory.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"factory\">",
			"        <Description>",
			"          The GroupFactory that generated the populations.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"group\">",
			"        <Description>",
			"          One GroupDefinition from the factory.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"certifiers\">",
			"        <Description>",
			"          A String, List&lt;String&gt;, Identity, or a List&lt;Identity&gt;.",
			"          When returning strings, the string must be the name or id",
			"          of an Identity.  When returning a single string, the string",
			"          may be formatted as a CSV of Identity names or ids.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Certifier rule"
	},
	"Group Aggregation Refresh Template": {
		"prefix": "rule-groupaggregationrefresh",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"GroupAggregationRefresh\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used to set the owner or modify the account group before it is persisted to the database.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"environment\" type=\"Map\">",
			"        <Description>",
			"          Arguments passed to the aggregation task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"obj\" type=\"ResourceObject\">",
			"        <Description>",
			"          A sailpoint.object.ResourceObject generated from the application",
			"          and the ProvisioningPlan's ObjectRequest.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"accountGroup\" type=\"ManagedAttribute\">",
			"        <Description>",
			"          The account group being refreshed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"groupApplication\" type=\"Application\">",
			"        <Description>",
			"          Application being aggregated.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"accountGroup\" type=\"ManagedAttribute\">",
			"        <Description>",
			"          The refreshed account group object.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Group Aggregation Refresh rule"
	},
	"Group Owner Template": {
		"prefix": "rule-groupowner",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"GroupOwner\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to assign owners to groups generated from a group factory.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"factory\">",
			"        <Description>",
			"          The GroupFactory that generated the populations.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"group\">",
			"        <Description>",
			"          One GroupDefinition from the factory.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"owner\">",
			"        <Description>",
			"          The group owner. The name or id of an Identity or the Identity object itself.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Group Owner rule"
	},
	"Composite Account Template": {
		"prefix": "rule-compositeaccount",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CompositeAccount\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    The Logical Account Rule is used to generate accounts on logical applications. Given an identity, the rule will determine if the identity should have an account on the logical application, and if so, creates and returns an account object for the identity.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The Identity currently being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The logical application.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"compositeLink\">",
			"        <Description>",
			"          A single logical Link or a Collection of logical Links.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Composite Account rule"
	},
	"Composite Remediation Template": {
		"prefix": "rule-compositeremediation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CompositeRemediation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is called when provisioning needs to be performed against logical accounts. It gets the plan built up by the plan compiler and the rule needs to return a list of Plans to fan out the request across all tiers.",
			"  </Description>",
			"  <Signature returnType=\"ProvisioningPlan\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application associated with the connector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"           The Identity object that is going to be remediated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>",
			"          The ProvisioningPlan created against the logical application.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"provisioningPlan\">",
			"        <Description>",
			"          A converted provisioning plan that targets the applications",
			"          that make up the logical application.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Composite Remediation rule"
	},
	"Composite Tier Correlation Template": {
		"prefix": "rule-compositetiercorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"CompositeTierCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is called  when provisioning needs to be performed against tiers.",
			"  </Description>",
			"  <Signature returnType=\"List\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"           The Identity object that is being correlated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"tierApplication\">",
			"        <Description>",
			"          The application owning the tier.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"primaryLink\">",
			"        <Description>",
			"          The Identity's primary link that is being correlated.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"links\">",
			"        <Description>",
			"          A List of Links found between the primaryLink and the tier.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Composite Tier Correlation rule"
	},
	"Correlation Template": {
		"prefix": "rule-correlation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Correlation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  Identity Correlation Rules are used to find identities to which new accounts can be attached.",
			"",
			"  A correlation rule must return a Map with one of the specified Return arguments.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"environment\" type=\"Map\">",
			"        <Description>",
			"          Arguments passed to the aggregation task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          Application being aggregated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"account\">",
			"        <Description>",
			"          A sailpoint.object.ResourceObject returned from the",
			"          collector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\">",
			"        <Description>",
			"          Existing link to this account.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identityName\">",
			"        <Description>",
			"          The name of an Identity object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          A fully resolved Identity object if the rule wants",
			"          to do its own queries to locate the identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityAttributeName\">",
			"        <Description>",
			"          The name of the extended attribute that can be used",
			"          to locate an existing identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityAttributeValue\">",
			"        <Description>",
			"          The value of the named extended attribute that can be used",
			"          to locate an existing identity. This attribute is used",
			"          together with the identityAttributeName argument.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Correlation rule"
	},
	"Email Recipient Template": {
		"prefix": "rule-emailrecipient",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"EmailRecipient\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"      This rule is used to select an identity or a list of identities who will receive email.",
			"  </Description>",
			"  <Signature returnType=\"String or List of Strings\">",
			"    <Inputs>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The sailpoint.object.Notifiable Interface for objects that can be reminded, escalated, and expired. ",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identity name or names\">",
			"        <Description>",
			"        You can return an identity name or a list of identity names.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Email Recipient rule"
	},
	"Escalation Template": {
		"prefix": "rule-escalation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Escalation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Escalation rules are used by the Escalator to figure out where to route notifiable items (work items or certification items) that have expired.",
			"",
			"Escalation rules return a string which specifies the name of the identity that should receive the escalated item.",
			"  </Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The sailpoint.object.Notifiable to escalate.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"newOwner\">",
			"        <Description>",
			"          The name of the Identity object that should be the new owner of",
			"          the notifiable.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Escalation rule"
	},
	"Fallback Work Item Forward Template": {
		"prefix": "rule-fallbackworkitemforward",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"FallbackWorkItemForward\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>A rule used to pick a fallback owner for a work item in case current owner will cause self-certification.</Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"item\" type=\"WorkItem\">",
			"        <Description>The WorkItem being opened. Note that the not all of the WorkItem arguments may be set.</Description>",
			"      </Argument>",
			"      <Argument name=\"owner\" type=\"Identity\">",
			"        <Description>The Identity that currently owns the work item.</Description>",
			"      </Argument>",
			"      <Argument name=\"creator\" type=\"String\">",
			"        <Description>The name of identity that created the certification belonging to the work item.</Description>",
			"      </Argument>",
			"      <Argument name=\"certifiers\" type=\"List&lt;String&gt;\">",
			"        <Description>A list of certifier names for the certification belonging to the work item.</Description>",
			"      </Argument>",
			"      <Argument name=\"name\" type=\"String\">",
			"        <Description>The name of the certification belonging to the work item. It may be null if certification is not created yet.</Description>",
			"      </Argument>",
			"      <Argument name=\"type\" type=\"Certification.Type\">",
			"        <Description>The type of the certification belonging to the work item.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"newOwner\">",
			"        <Description>An Identity that should own the work item.  Alternatively, this can be a String that is the name or id of the Identity.</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Fallback Work Item Forward rule"
	},
	"Field Value Template": {
		"prefix": "rule-fieldvalue",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"FieldValue\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule can be used to generate a field value (eg - an account name) using data from the given Identity. If this",
			"    rule is run in the context of a workflow step then the arguments passed into the step will also be available. Also,",
			"    any field values that have been processed so far from the policy related to the Application/Role will be available.",
			"  </Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"identity\" type=\"Identity\">",
			"        <Description>",
			"          The Identity object that represents the user needing the field value.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\" type=\"Link\">",
			"        <Description>",
			"          The sailpoint.object.Link that is being acted upon. If the link is not applicable,",
			"          this value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"group\" type=\"ManagedAttribute\">",
			"        <Description>",
			"          The sailpoint.object.ManagedAttribute that is being acted upon. If the managed attribute",
			"          is not applicable, the value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"project\" type=\"ProvisioningProject\">",
			"        <Description>",
			"          The provisioning project being acted upon. If a provisioning project is not applicable,",
			"          the value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"accountRequest\" type=\"ProvisioningPlan.AccountRequest\">",
			"        <Description>",
			"          The account request. If an account request is not applicable, the value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"objectRequest\" type=\"ProvisioningPlan.ObjectRequest\">",
			"        <Description>",
			"          The object request. If an object request is not applicable, the value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"role\" type=\"Bundle\">",
			"        <Description>",
			"          The role with the template we are compiling. If the role is",
			"          not applicable, the value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\" type=\"Application\">",
			"        <Description>",
			"          The sailpont.object.Application with the template we are compiling. If the application",
			"          is not applicable, the value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"template\" type=\"Template\">",
			"        <Description>",
			"          The Template that contains this field.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"field\" type=\"Field\">",
			"        <Description>",
			"          The current field being computed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"current\" type=\"Object\">",
			"        <Description>",
			"          The current value corresponding to the identity or account attribute that the field represents.",
			"          If no current value is set, this value will be null.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"operation\" type=\"ProvisioningPlan.Operation\">",
			"        <Description>",
			"          The operation being performed.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"value\">",
			"        <Description>",
			"          The string value created.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Field Value rule"
	},
	"File Parsing Template": {
		"prefix": "rule-fileparsingrule",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"FileParsingRule\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  This rule is used by the connector to parse each object from non-delimited file formats.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application associated with the Connector calling the rule.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"config\">",
			"        <Description>",
			"          The Attributes map from the Application.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          The Schema from the application.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"inputStream\">",
			"        <Description>",
			"          An InputStream object to the data file.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"reader\">",
			"        <Description>",
			"          A Reader to wrap the InputStream.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A map object that can be used to store data during the iteration process.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"map\">",
			"        <Description>",
			"          A Map of the complete record.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a File Parsing rule"
	},
	"Identity Attribute Template": {
		"prefix": "rule-identityattribute",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"IdentityAttribute\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"Identity attribute rules are used when the value is not simply a copy of an application account attribute value.  A transformation may be necessary on the account attribute, or several account attributes may need to be combined to produce the identity attribute.",
			"",
			"This rule can be called in two ways: as a global mapping rule and an application mapping rule.  A global mapping rule is called whenever the identity is refreshed.  The rule can look at any account attributes.  An application mapping rule is called only when the identity contains an account link for that application, this link is passed in the \"link\" argument which is not passed in global mapping rules.",
			"  </Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"environment\" type=\"Map\">",
			"        <Description>",
			"           Arguments passed to the aggregation or refresh task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"           The Identity object that represents the user",
			"           that is being aggregated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"attributeDefinition\">",
			"        <Description>",
			"           The AttributeDefinition object for this attribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\">",
			"        <Description>",
			"           The Link object from the Identity, if this is an application",
			"           mapping rule.  For global mapping rules this will be void.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"attributeSource\">",
			"        <Description>",
			"          The AttributeSource object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"oldValue\">",
			"        <Description>",
			"          The original value of the application account attribute.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"attributeValue\">",
			"        <Description>",
			"          The value of the attribute that should be populated.",
			"          The rule should return this value.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Identity Attribute rule"
	},
	"Identity Attribute Target Template": {
		"prefix": "rule-identityattributetarget",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"IdentityAttributeTarget\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Identity attribute target rules are used to transform identity attribute values that are being pushed to targets.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"value\" type=\"Object\">",
			"        <Description>",
			"           The value of the identity attribute.  Note that this could be single value or a list of values.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"sourceIdentityAttribute\">",
			"        <Description>",
			"           The sailpoint.object.ObjectAttribute for this target.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"sourceIdentityAttributeName\">",
			"        <Description>",
			"           The name of the identity attribute for this target.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"sourceAttributeRequest\">",
			"        <Description>",
			"           The sailpoint.object.ProvisioningPlan.AttributeRequest that is",
			"           setting the attribute on the identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"           The sailpoint.object.AttributeTarget that is being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\">",
			"        <Description>",
			"           The sailpoint.object.Link that is being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"           The sailpoint.object.Identity that is being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"project\">",
			"        <Description>",
			"           The sailpoint.object.ProvisioningProject that has the changes that",
			"           are being requested.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"attributeValue\">",
			"        <Description>",
			"          The transformed value that will be pushed to the target.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Identity Attribute Target rule"
	},
	"Identity Creation Template": {
		"prefix": "rule-identitycreation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"IdentityCreation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  Identity creation rules are used to set attributes on new Identity objects when they are created.  New identities may be created during the aggregation of application accounts, or optionally created after pass-through authentication.",
			"",
			"One common operation is to change the name property of the identity when the default application name is complex (such as a directory DN).",
			"",
			"Another common operation is to assign a set of initial capabilities based on the attributes pulled from the application account.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"environment\" type=\"Map\">",
			"        <Description>",
			"          Arguments passed to the aggregation task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          Application being aggregated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"account\" type=\"ResourceObject\" required=\"true\">",
			"        <Description>",
			"          The resource account for the identity being created.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\" type=\"Identity\" required=\"true\">",
			"        <Description>",
			"          The identity that is being created.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Identity Creation rule"
	},
	"Identity Selector Template": {
		"prefix": "rule-identityselector",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"IdentitySelector\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"      This rule is used to select an Identity that is related to the given Identity ",
			"  </Description>",
			"  <Signature returnType=\"boolean\">",
			"    <Inputs>",
			"      <Argument name=\"identity\" type=\"Identity\" required=\"true\">",
			"        <Description>",
			"          The identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"roleName\" type=\"String\">",
			"        <Description>",
			"          The name of the sailpoint.object.Bundle (role) that is being selected for the Identity. ",
			"          If roles are not applicable to this Identity selection, this value will be void.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"success\">",
			"        <Description>",
			"            True if the selection was successful; false otherwise.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Identity Selector rule"
	},
	"SuccessFactors Provisioning Rule Template For Operations": {
		"prefix": "rule-successfactorsoperationprovisioning",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"SuccessFactorsOperationProvisioning\">",
			"  <Description>This rule is used by the SuccessFactors connector to do",
			"        provisioning of username,",
			"        business email and business phone number.</Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application whose data file is being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The Schema currently in use.</Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>The ProvisioningPlan created against the SuccessFactors",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"request\">",
			"        <Description>The ProvisioningRequest created against the",
			"                    SuccessFactors application.</Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>Connector object created against the SuccessFactors",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"provisionMap\">",
			"        <Description>ProvisionMap object created against SuccessFactors",
			"                    application which holds information for",
			"                    business phone, business",
			"                    email and username.</Description>",
			"      </Argument>",
			"      <Argument name=\"successFactorsRestSession\">",
			"        <Description>A connected/ready to use successFactorsRestSession",
			"                    object which can be used for making calls to",
			"                    SuccessFactors ODATA",
			"                    API. This object already has the valid Bearer token.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>A Provisioning Result object is desirable to return the",
			"                    status.IT can be a new object or part of Provisioning Plan</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SuccessFactors Provisioning Rule For Operations rule"
	},
	"Identity Trigger Template": {
		"prefix": "rule-identitytrigger",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"IdentityTrigger\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  This rule can be used for Certification Events that use rule triggers. The previousIdentity and newIdentity hold snapshots of the identity before the update has occurred and the state of the identity after the update, respectively.",
			"  </Description>",
			"  <Signature returnType=\"boolean\">",
			"    <Inputs>",
			"      <Argument name=\"previousIdentity\">",
			"        <Description>",
			"          The identity before the refresh/aggregation (this will be null when an",
			"          identity is created).",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"newIdentity\">",
			"        <Description>",
			"          The identity after the refresh/aggregation (this will be null when an",
			"          identity is deleted).",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"          A boolean describing the result of the rule.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Identity Trigger rule"
	},
	"Integration Template": {
		"prefix": "rule-integration",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Integration\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by web service integrations to customize the data loaded into a provisioningPlan's integrationData object.  The rule is run by the provisioner immediately before the provisioning plan is sent to the integration.  The provisioningPlan and its integrationData object are used by Velocity to populate values in the XML templates for the web service calls.",
			"",
			"Don't forget to set an Attribute with the name of this Rule so it can be retrieved when needed.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          A sailpoint.object.Identity representing the person being remediated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>",
			"          A sailpoint.object.ProvisioningPlan representing remediation.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"integration\">",
			"        <Description>",
			"          The integration config object.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Integration rule"
	},
	"JDBC Build Map Template": {
		"prefix": "rule-jdbcbuildmap",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"JDBCBuildMap\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by the JDBC connector to build a map representation of the Resultset.",
			"    </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"                The application whose data file is being processed.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"                The Schema currently in use.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"                A Map containing state information.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"                The ResultSet from database.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"connection\">",
			"        <Description>",
			"                A connection object to connect to database.",
			"                </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"map\">",
			"        <Description>",
			"                A Map of the resource object assembled from the data.",
			"                </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a JDBC Build Map rule"
	},
	"Provisioning Rule Template": {
		"prefix": "rule-jdbcprovision",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"JDBCProvision\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by the JDBC connector to do provisioning of the data .",
			"    </Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"                The application whose data file is being processed.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"                The Schema currently in use.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"connection\">",
			"        <Description>",
			"                A connection object to connect to database.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>",
			"                The ProvisioningPlan created against the JDBC application.",
			"                </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"                A Provisioning Result object is desirable to return the status.IT can be a new object or part of  Provisioning Plan",
			"                </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Provisioning Rule rule"
	},
	"Provisioning Rule Template For Operations": {
		"prefix": "rule-jdbcoperationprovisioning",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"JDBCOperationProvisioning\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>This rule is used by the JDBC connector to do provisioning of the data .</Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application whose data file is being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The Schema currently in use.</Description>",
			"      </Argument>",
			"      <Argument name=\"connection\">",
			"        <Description>A connection object to connect to database.</Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>The ProvisioningPlan created against the JDBC application.</Description>",
			"      </Argument>",
			"      <Argument name=\"request\">",
			"        <Description>The ProvisioningRequest created against the JDBC application.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>A Provisioning Result object is desirable to return the status.IT can be a new object or part of  Provisioning Plan</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Provisioning Rule For Operations rule"
	},
	"SAP HR Custom Manager Model Rule": {
		"prefix": "rule-saphrmanagerrule",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"SAPHRManagerRule\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>Rule to aggregate the supervisor of the employee using custom code. Use this if there is a need to customize determining the supervisor of employees in SAP HR i.e. if the out-of-box supported OOSP and SS models are not in use in SAP-HR. The arguments \"employeeID\" and \"position\" can be used to determine the supervisor of the employee.</Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"destination\">",
			"        <Description>A connected and ready to use com.sap.conn.jco.JCoDestination object that can be used to invoke SAP BAPIs using JCo Interface. Use it to call SAP BAPIs and Function Modules. This destination object is shared with the connector implementation and the connector controls the destination's lifecycle.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The schema that represents the object.</Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>The SAP connector object being used to communicate with SAP HR target system. The SAPHR Connector Class has many public utility methods which help in invoking SAP Function Modules and lookup SAP tables.</Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>The SAP application object being used to connect to the SAP system.</Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>A map object that can be used to store data during the iteration process.</Description>",
			"      </Argument>",
			"      <Argument name=\"employeeID\">",
			"        <Description>Employee ID of the employee.</Description>",
			"      </Argument>",
			"      <Argument name=\"objectType\">",
			"        <Description>Object type of the schema(i.e. account).</Description>",
			"      </Argument>",
			"      <Argument name=\"position\">",
			"        <Description>Position ID of the employee.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"supervisor\">",
			"        <Description>Supervisor ID of the employee.</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SAP HR Custom Manager Model Rule rule"
	},
	"Provisioning Rule Template per operations rule for SAP HR": {
		"prefix": "rule-saphroperationprovisioning",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"SapHrOperationProvisioning\">",
			"  <Description>This rule is used by the SAP HR connector for provisioning",
			"        of the data .</Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application whose data file is being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The Schema currently in use.</Description>",
			"      </Argument>",
			"      <Argument name=\"destination\">",
			"        <Description>A connected/ready to use",
			"                    com.sap.conn.jco.JCoDestination object that can be used to call",
			"                    bapi, function modules and call to SAP tables. This is the main",
			"                    object used in making BAPI calls using the JCo interface.This",
			"                    destination object is shared with the connector implementation and",
			"                    the connector controls the destination's lifecycle.</Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>The ProvisioningPlan created against the SAP",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"request\">",
			"        <Description>The ProvisioningRequest created against the SAP",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>The SAP connector that is being used to communicate",
			"                    with SAP. This class is here for convenience as there are many",
			"                    utility methods that make calling Function Modules and doing table",
			"                    lookup easier.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>A Provisioning Result object is desirable to return the",
			"                    status.IT can be a new object or part of Provisioning Plan</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Provisioning Rule per operations rule for SAP HR rule"
	},
	"SAP Provisioning Rule Template for generic provisioning operations": {
		"prefix": "rule-saphrprovision",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"SapHrProvision\">",
			"  <Description>This rule is used by the SAP HR connector for",
			"        provisioning of the data .</Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application whose data file is being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The Schema currently in use.</Description>",
			"      </Argument>",
			"      <Argument name=\"destination\">",
			"        <Description>A connected/ready to use",
			"                    com.sap.conn.jco.JCoDestination object that can be used to call",
			"                    bapi, function modules and call to SAP tables. This is the main",
			"                    object used in making BAPI calls using the JCo interface.This",
			"                    destination object is shared with the connector implementation and",
			"                    the connector controls the destination's lifecycle.</Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>The ProvisioningPlan created against the SAP",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"request\">",
			"        <Description>The ProvisioningRequest created against the SAP",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>The SAP connector that is being used to communicate",
			"                    with SAP.This class is here for convenience as there are many",
			"                    utility methods that make calling Function Modules and doing table",
			"                    lookup easier.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>A Provisioning Result object is desirable to return",
			"                    the status.IT can be a new object or part of Provisioning Plan</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SAP Provisioning Rule for generic provisioning operations rule"
	},
	"Provisioning Rule Template per operations rule for PeopleSoft HRMS": {
		"prefix": "rule-peoplesofthrmsoperationprovisioning",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"PeopleSoftHRMSOperationProvisioning\">",
			"  <Description>This rule is used by the PeopleSoft HRMS connector for provisioning",
			"        of the data .</Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application whose data file is being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The Schema currently in use.</Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>The ProvisioningPlan created against the PeopleSoft HRMS",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"request\">",
			"        <Description>The ProvisioningRequest created against the PeopleSoft HRMS",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"session\">",
			"        <Description>The session object.</Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>The PeopleSoft HRMS connector that is being used to communicate",
			"                    with PeopleSoft HRMS system. This class is here for convenience as there are many",
			"                    utility methods that make calling Function Modules and doing table",
			"                    lookup easier.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>A Provisioning Result object is desirable to return the",
			"                    status.IT can be a new object or part of Provisioning Plan</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Provisioning Rule per operations rule for PeopleSoft HRMS rule"
	},
	"PeopleSoft HRMS Provisioning Rule Template for generic provisioning operations": {
		"prefix": "rule-peoplesofthrmsprovision",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"PeopleSoftHRMSProvision\">",
			"  <Description>This rule is used by the PeopleSoft HRMS connector for",
			"        provisioning of the data .</Description>",
			"  <Signature returnType=\"ProvisioningResult\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>The Schema currently in use.</Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>The ProvisioningPlan created against the PeopleSoft HRMS",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"request\">",
			"        <Description>The ProvisioningRequest created against the PeopleSoft HRMS",
			"                    application.</Description>",
			"      </Argument>",
			"      <Argument name=\"session\">",
			"        <Description>The session object.</Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>The PeopleSoft HRMS connector that is being used to communicate",
			"                    with PeopleSoft HRMS system.This class is here for convenience as there are many",
			"                    utility methods that make calling Function Modules and doing table",
			"                    lookup easier.</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>A Provisioning Result object is desirable to return",
			"                    the status.IT can be a new object or part of Provisioning Plan</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a PeopleSoft HRMS Provisioning Rule for generic provisioning operations rule"
	},
	"Link Attribute Template": {
		"prefix": "rule-linkattribute",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"LinkAttribute\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used when promoting account attributes from Links during aggregation.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"environment\">",
			"        <Description>",
			"          The optional arguments passed from the task executor, if the rule is running within a task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\">",
			"        <Description>",
			"          The Link whose attribute is being promoted.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"value\">",
			"        <Description>",
			"          An Object to be used as the attribute value.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Link Attribute rule"
	},
	"Listener Template": {
		"prefix": "rule-listener",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Listener\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  This rule can be used when the ObjectAttribute being listened to has changed.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"environment\">",
			"        <Description>",
			"          Optional arguments passed from the task executor, if the rule is running within a task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The identity which owns the attribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"attributeDefinition\">",
			"        <Description>",
			"          The definition of the ObjectAttribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"attributeName\">",
			"        <Description>",
			"          The name of the ObjectAttribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"oldValue\">",
			"        <Description>",
			"          The original value of the ObjectAttribute.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"newValue\">",
			"        <Description>",
			"          The new value of the ObjectAttribute.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Listener rule"
	},
	"Managed Attribute Promotion Template": {
		"prefix": "rule-managedattributepromotion",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ManagedAttributePromotion\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A ManagedAttributePromotion rule is called when ManagedAttributes are automatically created during aggregation, refresh, or from the missing entitlement descriptions task.",
			"",
			"    This can modify the ManagedAttribute that is passed in to set fields such as owner, requestable, or explanations before they are saved.",
			"  </Description>",
			"  <Signature>",
			"    <Inputs>",
			"      <Argument name=\"attribute\">",
			"        <Description>",
			"          The sailpoint.object.ManagedAttribute to modify during promotion.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The sailpoint.object.Application the managed attribute is from.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\" type=\"Map\">",
			"        <Description>",
			"          A Map that contains managed attribute promotion shared state during a task run.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Managed Attribute Promotion rule"
	},
	"Manager Correlation Template": {
		"prefix": "rule-managercorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ManagerCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  A rule called to help IdentityIQ take a value from the mapped manager field and map it to an existing IdentityIQ identity.",
			"",
			"Just like identity correlation, the rule needs to return a map that contains some values that will guide the correlator on how to try to find the identity.  It can also do the lookup manually and just returned the identity.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"environment\" type=\"Map\">",
			"        <Description>",
			"          Arguments passed to the aggregation task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application the aggregated account is from.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"instance\">",
			"        <Description>",
			"          Optional instance identifier within the application.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>",
			"          A connector to the attribute source.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\">",
			"        <Description>",
			"          Account link of the referencing identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"managerAttributeValue\">",
			"        <Description>",
			"          Attribute value that is stored in the manager attribute.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identityName\">",
			"        <Description>",
			"          The name of an Identity object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          A fully resolved Identity object if the rule wants",
			"          to do its own queries to locate the identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityAttributeName\">",
			"        <Description>",
			"          The name of the extended attribute that can be used",
			"          to locate an existing identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityAttributeValue\">",
			"        <Description>",
			"          The value of the named extended attribute that can be used",
			"          to locate an existing identity. This attribute is used",
			"          together with the identityAttributeName argument.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Manager Correlation rule"
	},
	"Merge Map Template": {
		"prefix": "rule-mergemaps",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"MergeMaps\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"  This rule merges two maps together. This is used when there are multiple lines that represent the same object, and certain attributes have to merged.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application associated with the Connector calling the rule.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          The Schema from the application.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"current\">",
			"        <Description>",
			"          The current Map object that needs merging.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"newObject\">",
			"        <Description>",
			"          The new Map object that needs merging.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"mergeAttrs\">",
			"        <Description>",
			"          A List of the attributes to merge.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"map\">",
			"        <Description>",
			"          A Map of the current and new maps, merged according to the attributes list.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Merge Map rule"
	},
	"Owner Template": {
		"prefix": "rule-owner",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Owner\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Owner Rules are used by provisioning policies to determine the owner of the",
			"    provisioning policy or its policy fields.  ",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The Identity object being provisioned.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"role\">",
			"        <Description>",
			"          The Role object involved in the provisioning processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The Application object being provisioned.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"template\">",
			"        <Description>",
			"          The Template object that defines the provisioning plan.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"field\">",
			"        <Description>",
			"          The Field object being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"requester\">",
			"        <Description>",
			"          The name of the user requesting the provisioning.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identityName\">",
			"        <Description>",
			"          The name of the Identity object being provisioned.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"source\">",
			"        <Description>",
			"          The Application the object was aggregated from.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"plan\">",
			"        <Description>",
			"          The ProvisioningPlan object on its way to the Connector",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"accountRequest\">",
			"        <Description>",
			"          The account request. If an account request is not applicable, the value will be null.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          Either the Identity of the owner, or the type of template used to",
			"          define the provisioning policy, from which the owner can be determined.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Owner rule"
	},
	"Policy Template": {
		"prefix": "rule-policy",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Policy\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used to determine if a Policy has been violated.",
			"  </Description>",
			"  <Signature returnType=\"PolicyViolation\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The Identity being inspected.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"policy\">",
			"        <Description>",
			"          The Policy being evaluated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"constraint\">",
			"        <Description>",
			"          The Constraint being evaluated.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"violation\">",
			"        <Description>",
			"          The PolicyViolation object.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Policy rule"
	},
	"Policy Owner Template": {
		"prefix": "rule-policyowner",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"PolicyOwner\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used to determine the owner of a Policy violation.",
			"  </Description>",
			"  <Signature returnType=\"Identity\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The identity with the policy violation.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"policy\">",
			"        <Description>",
			"            The policy being evaluated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"constraint\">",
			"        <Description>",
			"            The constraint associated with the violation. Provided if available, set to null if there is no constraint.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"        The return value for the policy violation owner may be:",
			"           String - identity name;",
			"           Identity - identity object;",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Policy Owner rule"
	},
	"Policy Notification Template": {
		"prefix": "rule-policynotification",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"PolicyNotification\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Policy notification rules return a Map, which must contain a key, named identityName, that holds the name of the identity that should receive the policy violation notification.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"violation\">",
			"        <Description>",
			"          A sailpoint.object.PolicyViolation object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"policy\">",
			"        <Description>",
			"          A sailpoint.object.Policy object.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identityName\">",
			"        <Description>",
			"          The name of the identity that should be notified.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Policy Notification rule"
	},
	"PostIterate Template": {
		"prefix": "rule-postiterate",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"PostIterate\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is called after the connector processes the data in a file.",
			"",
			"Stats is a Map passed in by the connector with the information it has gathered. Custom keys can be added here if necessary for validation.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          Application being iterated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          Schema requested during iteration.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"stats\">",
			"        <Description>",
			"          A map of the stats for the current file that was just iterated.",
			"          Contains keys:",
			"            fileName : (String) filename of the file about to be processed",
			"            absolutePath : (String) absolute filename",
			"            length : (Long) length in bytes",
			"            lastModified : (Long) last time the file was updated Java GMT",
			"            columnNames : (List) column names that were used during the iteration",
			"            objectsIterated : (Long) total number of objects iterated during this run",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a PostIterate rule"
	},
	"PreIterate Template": {
		"prefix": "rule-preiterate",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"PreIterate\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"     This rule is called before the connector processes the data in a file.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          Application being iterated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          Schema representing the data being iterated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"stats\">",
			"        <Description>",
			"          A map passed by the connector of the stats for the file about to be iterated.",
			"          Contains keys:",
			"            fileName : (String) filename of the file about to be processed",
			"            absolutePath : (String) absolute filename",
			"            length : (Long) length in bytes",
			"            lastModified : (Long) last time the file was updated Java GMT",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a PreIterate rule"
	},
	"Identity Refresh Template": {
		"prefix": "rule-refresh",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Refresh\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Identity refresh rules are called during aggregation and identity refresh tasks after all of the other operations have completed.  It provides a final hook for modifying the identity before it is persisted and we move on to the next identity.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"environment\" type=\"java.util.Map\" required=\"true\">",
			"        <Description>",
			"          The task arguments passed to the aggregation or refresh task.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\" type=\"Identity\" required=\"true\">",
			"        <Description>",
			"          The identity that is being updated.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Identity Refresh rule"
	},
	"Request Object Selector Template": {
		"prefix": "rule-requestobjectselector",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"RequestObjectSelector\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Request Object Selector Rules are used by the Life Cycle Manager to determine the Objects that can be requested by a given",
			"    user on a given population.  For bulk request this rule is run twice.  The first time the result determines",
			"    which applications are shown to the requestor.  The second time the result determines whether or not the specified",
			"    requestee has access to the object.  On the first execution the requestee is always null, so the rule",
			"    needs to expect and handle that case in order to be usable for bulk requests.",
			"  </Description>",
			"  <Signature returnType=\"sailpoint.object.QueryInfo\">",
			"    <Inputs>",
			"      <Argument name=\"requestor\" type=\"sailpoint.object.Identity\">",
			"        <Description>",
			"          Identity that is making the Life Cycle Manager request.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"requestee\" type=\"sailpoint.object.Identity\">",
			"        <Description>",
			"          Identity on whose behalf the Life Cycle Manager request is being made.  In the case of bulk requests,",
			"          this argument will be set to null when determining the roles that are visible to the requestor.",
			"          It will be provided once a selection has been made in order to determine whether or not the given requestee",
			"          should have access to the selected role.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"filter\">",
			"        <Description>",
			"          A Filter object that will be used to search for accessible request objects.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Request Object Selector rule"
	},
	"Resource Object Customization Template": {
		"prefix": "rule-resourceobjectcustomization",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ResourceObjectCustomization\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"     This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data.",
			"",
			"Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.",
			"  </Description>",
			"  <Signature returnType=\"ResourceObject\">",
			"    <Inputs>",
			"      <Argument name=\"object\">",
			"        <Description>",
			"          The ResourceObject built by the connector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          Application that references the connector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>",
			"          The connector object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"resourceObject\">",
			"        <Description>",
			"          The updated resource object.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Resource Object Customization rule"
	},
	"Risk Score Template": {
		"prefix": "rule-riskscore",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"RiskScore\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"     This rule lets you run customized score algorithms that calculate a risk score based on the values of identity attributes.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The Identity whose risk score is being computed.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"riskScore\">",
			"        <Description>",
			"          Either an Integer or String whose value is the computed risk score.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Risk Score rule"
	},
	"SAP BuildMap Template": {
		"prefix": "rule-sapbuildmap",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"SAPBuildMap\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"     This rule can be used to customize the SAP object that the connectors build by default.",
			"",
			"The rule gets a Map named 'object' that holds all of the attributes built up using the default SAP implementation.  The object can be modified/added to here to help support customer customizations and transformations that require the SAP system.",
			"",
			"This rule is different from a Customization rule in that it deals with a Map instead of a ResourceObject. The rule also receives a 'destination' object so it can make SAP calls to build up extra data. It's very much like a BuildMap rule from the DelimitedFileConnector, except that it receives a prebuilt Map object.",
			"  </Description>",
			"  <Signature returnType=\"void\">",
			"    <Inputs>",
			"      <Argument name=\"destination\">",
			"        <Description>",
			"          A connected/ready to use com.sap.conn.jco.JCoDestination object that can",
			"          be used to call bapi, function modules and call to SAP tables. This",
			"          is the main object used in making BAPI calls using the JCo interface.",
			"          This destination object is shared with the connector implementation and the",
			"          connector controls the destination's lifecycle.",
			"         </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          The schema that represents the object we are building.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>",
			"         The SAP connector that is being used to communicate with SAP.",
			"         This class is here for convenience as there are many utility methods",
			"         that make calling Function Modules and doing table lookup easier",
			"         </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The SAP application object being used to connect to the SAP system.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A map object that can be used to store data during the iteration process.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"object\">",
			"        <Description>",
			"          A map object that holds the attributes that have been built up by the",
			"          default connector implementation. Any attributes built by this rule",
			"          should be added to this object. This object is handed by reference,",
			"          so it can be used directly.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SAP BuildMap rule"
	},
	"Scope Correlation Template": {
		"prefix": "rule-scopecorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ScopeCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Given an identity and the defined scope correlation attribute and value, determine the correct assigned scope for the Identity.  This can return a single Scope (if we can correlate to a distinct scope), a List of Scopes (if we can't determine a distinct scope), or null (if there is not an assigned scope for the given identity).",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The identity for which to correlate the assigned scope.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"scopeCorrelationAttribute\">",
			"        <Description>",
			"          The name of the scope correlation attribute on the identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"scopeCorrelationAttributeValue\">",
			"        <Description>",
			"          The value of the scope correlation attribute on the given identity.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"scopes\">",
			"        <Description>",
			"          Either a Scope or a List that contains multiple scopes that could",
			"          correlate to the given identity.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Scope Correlation rule"
	},
	"SAML Correlation Template": {
		"prefix": "rule-samlcorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"SAMLCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to map SAML name Id and attributes to an Identity.",
			"  </Description>",
			"  <Signature returnType=\"SailPointObject\">",
			"    <Inputs>",
			"      <Argument name=\"assertionAttributes\">",
			"        <Description>",
			"          A map where the key is a string and value is a string. The map will always contain",
			"          a key NameId with the value being the name Id sent by the Identity Provider.  All other",
			"          SAML assertion attributes will be included in the map.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identity Or Link\">",
			"        <Description>",
			"          The Identity or Link that has been authenticated via SAML SSO.",
			"          Returning the Link is the preferred way as it provides the",
			"          exact account back to the server side which can be helpful",
			"          when collecting authentication for electronic signatures.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SAML Correlation rule"
	},
	"Scope Selection Template": {
		"prefix": "rule-scopeselection",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"ScopeSelection\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is run if scope correlation for an identity's assigned scope (either from a scope correlation attribute or rule) returns a list of scopes because the correlation is ambiguous.  This can happen since scopes are not guaranteed to have unique names.  This rule is responsible for selecting the correct scope out of the candidateScopes list for the given identity.  If the correct scope cannot be determined, this rule should return null.",
			"  </Description>",
			"  <Signature returnType=\"Scope\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The identity for which to correlate the assigned scope.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"scopeCorrelationAttribute\">",
			"        <Description>",
			"          The name of the scope correlation attribute on the identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"scopeCorrelationAttributeValue\">",
			"        <Description>",
			"          The value of the scope correlation attribute on the given identity.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"candidateScopes\">",
			"        <Description>",
			"          The List of scopes that were correlated to the given Identity.  A",
			"          single Scope from this list should be selected and returned if it is",
			"          possible to determine the correct scope.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"scope\">",
			"        <Description>",
			"          A single scope selected from the candidateScopes List, or null if it",
			"          is impossible to determine the correct scope for the given identity.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Scope Selection rule"
	},
	"SSO Authentication Template": {
		"prefix": "rule-ssoauthentication",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"SSOAuthentication\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to perform SSO authentication.",
			"  </Description>",
			"  <Signature returnType=\"SailPointObject\">",
			"    <Inputs>",
			"      <Argument name=\"httpRequest\">",
			"        <Description>",
			"          A javax.servlet.http.HttpServletRequest object containing the SSO data.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"identity Or Link\">",
			"        <Description>",
			"          The Identity or Link that has been authenticated via SSO.",
			"          Starting in 6.1 this rule can return either the Identity or",
			"          the specific Link that was used to authenticate the user.  ",
			"          Returning the Link is the preferred way as it provides the",
			"          exact account back to the server side which can be helpful",
			"          when collecting authentication for electronic signatures.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SSO Authentication rule"
	},
	"SSO Validation Template": {
		"prefix": "rule-ssovalidation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"SSOValidation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to perform SSO validation.  Returning a non-null string",
			"    invalidates the session.  The string is used as the error message.",
			"  </Description>",
			"  <Signature returnType=\"String\">",
			"    <Inputs>",
			"      <Argument name=\"httpRequest\">",
			"        <Description>",
			"          A javax.servlet.http.HttpServletRequest object containing the SSO data.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"resultMessage\">",
			"        <Description>",
			"          The message that describes the reason why the validation failed.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a SSO Validation rule"
	},
	"Target Correlation Template": {
		"prefix": "rule-targetcorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"TargetCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is called when a Target is correlated.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The Application which owns the Target.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"nativeId\">",
			"        <Description>",
			"          The native id associated with an AccessMapping.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being correlated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"targetSource\">",
			"        <Description>",
			"          The source of the configuration for the collector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"isGroup\">",
			"        <Description>",
			"          Indicates whether or not this is a GroupMapping.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"          A Map containing either a ManagedAttribute object ('group') or the name ('groupAttributeName') and value ('groupAttributeValue') of a ManagedAttribute. Link may also be returned since targets may also be correlated to a link object.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Target Correlation rule"
	},
	"Target Creation Template": {
		"prefix": "rule-targetcreation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"TargetCreation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is called when a Target is created.",
			"  </Description>",
			"  <Signature returnType=\"Target\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The Application which owns the Target.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being created.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"targetSource\">",
			"        <Description>",
			"          The source of the configuration for the collector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"aggregationSource\">",
			"        <Description>",
			"          The source of the configuration aggregating the Targets.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being created.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Target Creation rule"
	},
	"Target Refresh Template": {
		"prefix": "rule-targetrefresh",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"TargetRefresh\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is called when a Target is refreshed.",
			"  </Description>",
			"  <Signature returnType=\"Target\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The Application which owns the Target.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being created.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"targetSource\">",
			"        <Description>",
			"          The source of the configuration for the collector.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"aggregationSource\">",
			"        <Description>",
			"          The source of the configuration aggregating the Targets.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being created.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Target Refresh rule"
	},
	"Target Transformation Template": {
		"prefix": "rule-targettransformer",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"TargetTransformer\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by the target aggregation process to allow customizing targets returned from downstream sources.",
			"  </Description>",
			"  <Signature returnType=\"Target\">",
			"    <Inputs>",
			"      <Argument name=\"collector\">",
			"        <Description>",
			"          The Collector of the Targets.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being transformed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"targetSource\">",
			"        <Description>",
			"          The source of the configuration for the collector.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"target\">",
			"        <Description>",
			"          The Target being transformed.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Target Transformation rule"
	},
	"Task Event Template": {
		"prefix": "rule-taskeventrule",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"TaskEventRule\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to inject logic at a particular stage in the Task execution process.",
			"  </Description>",
			"  <Signature returnType=\"Map\">",
			"    <Inputs>",
			"      <Argument name=\"taskResult\">",
			"        <Description>",
			"          The current task result object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"event\">",
			"        <Description>",
			"          The TaskEvent object",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"taskResult\">",
			"        <Description>The resulting task result object, or null if no update is required.</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Task Event rule"
	},
	"Transformation Template": {
		"prefix": "rule-transformation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Transformation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used by the delimited file connector and will transform a Map into a ResourceObject.",
			"  </Description>",
			"  <Signature returnType=\"ResourceObject\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"          The application being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"      The schema being iterated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"object\">",
			"        <Description>",
			"      A Map representing the data to be transformed.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"resourceObject\">",
			"        <Description>",
			"          The resulting ResourceObject.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Transformation rule"
	},
	"Validation Template": {
		"prefix": "rule-validation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Validation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used to validate the Field values on a provisioning plan.",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"            The Identity object being provisioned.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"app\">",
			"        <Description>",
			"            The Application object being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"form\">",
			"        <Description>",
			"            The Form object being processed.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"field\">",
			"        <Description>",
			"            The Field object being validated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"value\">",
			"        <Description>",
			"            The Object representing the field value.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"link\" type=\"Link\">",
			"        <Description>",
			"          The sailpoint.object.Link that is being acted upon. If the link is not applicable,",
			"          this value will be null.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"value\">",
			"        <Description>",
			"          An Object (possibly a Collection) of messages resulting from the",
			"          validation rule.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Validation rule"
	},
	"Violation Template": {
		"prefix": "rule-violation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Violation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    This rule is used to format a PolicyViolation object.",
			"  </Description>",
			"  <Signature returnType=\"PolicyViolation\">",
			"    <Inputs>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          The Identity in violation.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"policy\">",
			"        <Description>",
			"          The Policy being violated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"constraint\">",
			"        <Description>",
			"          The Constraint being violated.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"violation\">",
			"        <Description>",
			"          The PolicyViolation object.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"          A Map containing state information.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"violation\">",
			"        <Description>",
			"          The formatted PolicyViolation object.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Violation rule"
	},
	"Workflow Template": {
		"prefix": "rule-workflow",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"Workflow\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used by a Workflow to determine a step action or variable value.",
			"    ",
			"    Note that an Attributes map of all variables from the current WorkflowContext,",
			"    merged with the arguments from the Step, is also passed into the workflow rule. ",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"wfcontext\">",
			"        <Description>",
			"          The current WorkflowContext.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"handler\">",
			"        <Description>",
			"          The workflow handler associated with the current WorkflowContext.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"workflow\">",
			"        <Description>",
			"          The current Workflow definition.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"step\">",
			"        <Description>",
			"          The current Step.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"approval\">",
			"        <Description>",
			"          The current Approval.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The WorkItem being processed.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"Object\">",
			"        <Description>",
			"          The result of the workflow rule; dependent on the rule itself.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Workflow rule"
	},
	"Work Item Forward Template": {
		"prefix": "rule-workitemforward",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"WorkItemForward\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    A rule used to examine a WorkItem and determine whether or not it needs to be forwarded to a new owner for further analysis or action.  The default forwarding rule in the system configuratin will be called every time a WorkItem is opened, and whenever it is forwarded in the user interface.  ",
			"  </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"item\">",
			"        <Description>",
			"          The WorkItem being opened or forwarded.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"owner\">",
			"        <Description>",
			"          The Identity that currently owns the work item.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"newOwner\">",
			"        <Description>",
			"          An Identity that should own the work item.  Alternatively, this can",
			"          be a String that is the name or id of the Identity.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Work Item Forward rule"
	},
	"Task Completion Email Rule": {
		"prefix": "rule-taskcompletion",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"TaskCompletion\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"    Example rule to send email",
			"  </Description>",
			"  <Signature>",
			"    <Inputs>",
			"      <Argument name=\"context\">",
			"        <Description>",
			"          A sailpoint.api.SailPointContext object",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"log\">",
			"        <Description>",
			"          The log object associated with the SailPointContext.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"result\">",
			"        <Description>",
			"          result of task.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Task Completion Email Rule rule"
	},
	"PeopleSoft Build Map Template": {
		"prefix": "rule-peoplesofthrmsbuildmap",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"PeopleSoftHRMSBuildMap\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"     This rule can be used to customize the PeopleSoft resource object that the connectors build by default.",
			"     The rule gets a resource object map from the buildMap that holds all of the attributes",
			"     on PeopleSoft HRMS aggregation.  The buildMap rule will be modified/added to here to help support customer customizations and",
			"     transformations that require the PeopleSoft HRMS  system.",
			"  </Description>",
			"  <Signature returnType=\"map\">",
			"    <Inputs>",
			"      <Argument name=\"context\">",
			"        <Description>",
			"          A sailpoint.api.SailPointContext object that can be used to",
			"          query the database to aid in provisioning.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"           The application object being used to connect to the PeopleSoft system.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"schema\">",
			"        <Description>",
			"          The schema that represents the object we are building for aggregation.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"connection\">",
			"        <Description>",
			"          Connection to the application database.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"state\">",
			"        <Description>",
			"           A map object that can be used to store data during the iteration process.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"identity\">",
			"        <Description>",
			"          An identity in context of aggregation.",
			"        </Description>",
			"      </Argument>",
			"      <Argument name=\"connector\">",
			"        <Description>",
			"         The connector that is being used to communicate with PeoplesoftHRMS connector functions/methods.",
			"        </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"map\">",
			"        <Description>",
			"          The result of the return map dependent on the rule itself.",
			"        </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a PeopleSoft Build Map rule"
	},
	"After Operation Rule Template for  Web Services": {
		"prefix": "rule-webserviceafteroperationrule",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"WebServiceAfterOperationRule\">",
			"  <Description>The Web Services connector will call this rule after performing ANY defined operation.",
			"    This rule can be used to update the parsed resource object and/or add persistent values to the application's data.",
			"    (See information about what to return for more information)     ",
			"     </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application whose data file is being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"requestEndPoint\">",
			"        <Description>The current request information contain header, body ,response object</Description>",
			"      </Argument>",
			"      <Argument name=\"processedResponseObject\">",
			"        <Description>Response Object processed by the Web services connector</Description>",
			"      </Argument>",
			"      <Argument name=\"rawResponseObject\">",
			"        <Description>Response Object returned from the end system</Description>",
			"      </Argument>",
			"      <Argument name=\"restClient\">",
			"        <Description>REST Client Object</Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"Map\">",
			"        <Description>A newly created map containing a 'data' key and optionally, a 'connectorStateMap' key.  The 'data' value should be set to a map containing a parsed list of accounts/groups.  ",
			"                The 'connectorStateMap' value can be set to a map containing values that will be persisted to the application definition.",
			"                </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a After Operation Rule for  Web Services rule"
	},
	"Before Operation Rule Template for Web Services Connector": {
		"prefix": "rule-webservicebeforeoperationrule",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" name=\"${1:${TM_FILENAME_BASE}}\" type=\"WebServiceBeforeOperationRule\">",
			"  <Description>The Web Services connector will call this rule before performing ANY defined operation.",
			"        This rule can be used to add/update values in the endpoint object before performing the operation and/or add persistent values to the application's data.",
			"        (See information about what to return for more information)             ",
			"        </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>The application associated with the operation being processed.</Description>",
			"      </Argument>",
			"      <Argument name=\"requestEndPoint\">",
			"        <Description>The current request information containing the header, body, context url, method type, response attribute map, ",
			"                and response code. This object can be modified directly and returned by the rule to update the endpoint information that is",
			"                used by the current operation.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"oldResponseMap\">",
			"        <Description>Earlier response object </Description>",
			"      </Argument>",
			"      <Argument name=\"restClient\">",
			"        <Description>REST Client Object</Description>",
			"      </Argument>",
			"      <Argument name=\"provisioningPlan\">",
			"        <Description>A ProvisioningPlan object containing the payload of the http request. A provisioning plan has an account request which defines the operation to be performed on the account.",
			"                 An account request can contain multiple attribute requests and each attribute request represents an operation on a single account attribute.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"partition\">",
			"        <Description>If applicable, a Partition object with the current aggregation's partitioning information.",
			"                </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"Map\">",
			"        <Description>An updated or unmodified 'requestEndPoint' object. If application object modifications are desired, create a map containing keys 'updatedEndPoint' and 'connectorStateMap' and use it as the return value;",
			"                Within the new map, the 'updatedEndPoint' can be set to an updated or unmodified 'requestEndPoint' object. The 'connectorStateMap' will be saved as persistent values in the application definition.",
			"                </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Before Operation Rule for Web Services Connector rule"
	},
	"Alert Creation Template": {
		"prefix": "rule-alertcreation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"AlertCreation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"      This rule is called when an Alert is created.",
			"    </Description>",
			"  <Signature returnType=\"Alert\">",
			"    <Inputs>",
			"      <Argument name=\"application\">",
			"        <Description>",
			"            The Application the alert was aggregated from.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"alert\">",
			"        <Description>",
			"            The Alert being created.",
			"          </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"alert\">",
			"        <Description>",
			"            The Alert being created.",
			"          </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Alert Creation rule"
	},
	"Alert Correlation Template": {
		"prefix": "rule-alertcorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"AlertCorrelation\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"      This rule is called when correlating an Alert to a SailPointObject.",
			"    </Description>",
			"  <Signature returnType=\"Alert\">",
			"    <Inputs>",
			"      <Argument name=\"source\">",
			"        <Description>",
			"            The Application the alert was aggregated from.",
			"          </Description>",
			"      </Argument>",
			"      <Argument name=\"alert\">",
			"        <Description>",
			"            The Alert object.",
			"          </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"object\">",
			"        <Description>",
			"            An instance of a SailPointObject to correlate the Alert to.",
			"          </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Alert Correlation rule"
	},
	"Alert Match Template": {
		"prefix": "rule-alertmatch",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule language=\"beanshell\" type=\"AlertMatch\" name=\"${1:${TM_FILENAME_BASE}}\">",
			"  <Description>",
			"      This rule is called when matching Alerts against AlertDefinitions configured with a rule.",
			"    </Description>",
			"  <Signature returnType=\"Object\">",
			"    <Inputs>",
			"      <Argument name=\"alert\">",
			"        <Description>",
			"            The Alert object being matched.",
			"          </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"object\">",
			"        <Description>Object evaluated for truthiness.</Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"        $0",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a Alert Match rule"
	},
	"IdentityNowSAML": {
		"prefix": "rule-samlcorrelation",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<!DOCTYPE Rule PUBLIC \"sailpoint.dtd\" \"sailpoint.dtd\">",
			"<Rule name=\"${1:${TM_FILENAME_BASE}}\" type=\"SAMLCorrelation\">",
			"  <Signature>",
			"    <Inputs>",
			"      <Argument name=\"log\">",
			"        <Description>",
			"                    Logger to take care of logging.",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"context\">",
			"        <Description>",
			"                    SailPointContext",
			"                </Description>",
			"      </Argument>",
			"      <Argument name=\"assertionAttributes\">",
			"        <Description>",
			"                    Map of attributes taken from the SAML assertion",
			"                </Description>",
			"      </Argument>",
			"    </Inputs>",
			"    <Returns>",
			"      <Argument name=\"ident\">",
			"        <Description>",
			"                    Matching identity based on the nameId taken from assertionAttributes",
			"                </Description>",
			"      </Argument>",
			"    </Returns>",
			"  </Signature>",
			"  <Source><![CDATA[",
			"            // Imports",
			"            import sailpoint.object.Identity;",
			"",
			"            // Making a BIG assumption here that the nameid-format is unspecified/persitent",
			"",
			"            // Get the nameId from the assertionAttributes",
			"            String nameId = (String)assertionAttributes.get(\"nameId\");",
			"",
			"            Identity ident;",
			"",
			"            if(nameId != null) {",
			"                // Lookup the identity based on nameId",
			"                ident = context.getObject(Identity.class, nameId);",
			"            }",
			"",
			"            return ident;",
			"",
			"        ]]></Source>",
			"</Rule>"
		],
		"description": "Create a IdentityNowSAML rule"
	}
}